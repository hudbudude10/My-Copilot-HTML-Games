<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Smash Shooter with Floaty Gravity</title>
  <style>
    body {
      margin: 0;
      background: #111;
      font-family: sans-serif;
      color: white;
    }

    #game {
      position: relative;
      width: 1000px;
      height: 500px;
      margin: 40px auto;
      background: linear-gradient(#444, #222);
      overflow: hidden;
      border: 3px solid #fff;
    }

    .fighter {
      position: absolute;
      width: 50px;
      height: 50px;
      border-radius: 8px;
    }

    #player1 {
      background: crimson;
    }

    #player2 {
      background: royalblue;
    }

    .bullet {
      position: absolute;
      width: 10px;
      height: 10px;
      background: yellow;
      border-radius: 50%;
    }

    .platform {
      position: absolute;
      width: 200px;
      height: 20px;
      background: #888;
      border: 2px solid #aaa;
    }

    .health-bar {
      width: 45%;
      height: 20px;
      margin: 10px;
      background: #555;
      border: 2px solid white;
      position: relative;
    }

    .health-fill {
      height: 100%;
      background: limegreen;
      transition: width 0.2s;
    }

    #hud {
      display: flex;
      justify-content: space-between;
      width: 1000px;
      margin: 0 auto;
    }

    #winner {
      text-align: center;
      font-size: 2em;
      margin-top: 20px;
      display: none;
    }
  </style>
</head>
<body>
  <div id="hud">
    <div class="health-bar"><div id="health1" class="health-fill"></div></div>
    <div class="health-bar"><div id="health2" class="health-fill"></div></div>
  </div>
  <div id="game">
    <div id="player1" class="fighter"></div>
    <div id="player2" class="fighter"></div>
    <div class="platform" style="left: 300px; top: 350px;"></div>
    <div class="platform" style="left: 600px; top: 250px;"></div>
  </div>
  <div id="winner"></div>

  <script>
    const game = document.getElementById("game");
    const p1 = document.getElementById("player1");
    const p2 = document.getElementById("player2");
    const health1 = document.getElementById("health1");
    const health2 = document.getElementById("health2");
    const winnerText = document.getElementById("winner");

    const gravity = 0.4; // slower gravity
    const ground = 436;
    const fighters = {
      player1: { x: 100, y: ground, vx: 0, vy: 0, health: 100, facing: 1, canShoot: true, isGrounded: false },
      player2: { x: 850, y: ground, vx: 0, vy: 0, health: 100, facing: -1, canShoot: true, isGrounded: false }
    };

    const bullets = [];
    const platforms = [
      { x: 300, y: 350, width: 200, height: 20 },
      { x: 600, y: 250, width: 200, height: 20 }
    ];

    const keys = {};
    document.addEventListener("keydown", e => keys[e.key] = true);
    document.addEventListener("keyup", e => keys[e.key] = false);

    function updatePosition(player, el) {
      player.vy += gravity;
      player.x += player.vx;
      player.y += player.vy;

      player.isGrounded = false;
      checkPlatformCollision(player);

      if (player.y > ground) {
        player.y = ground;
        player.vy = 0;
        player.isGrounded = true;
      }

      el.style.left = player.x + "px";
      el.style.top = player.y + "px";
    }

    function checkPlatformCollision(player) {
      for (const plat of platforms) {
        const onPlatform =
          player.x + 50 > plat.x &&
          player.x < plat.x + plat.width &&
          player.y + 50 >= plat.y &&
          player.y + 50 <= plat.y + plat.height + 10 &&
          player.vy >= 0;

        if (onPlatform) {
          player.y = plat.y - 50;
          player.vy = 0;
          player.isGrounded = true;
        }
      }
    }

    function handleControls() {
      const p1 = fighters.player1;
      if (keys["a"]) {
        p1.vx = -5;
        p1.facing = -1;
      } else if (keys["d"]) {
        p1.vx = 5;
        p1.facing = 1;
      } else {
        p1.vx = 0;
      }
      if (keys["w"] && p1.isGrounded) {
        p1.vy = -12;
        p1.isGrounded = false;
      }
      if (keys[" "]) shoot(p1);

      const p2 = fighters.player2;
      if (keys["ArrowLeft"]) {
        p2.vx = -5;
        p2.facing = -1;
      } else if (keys["ArrowRight"]) {
        p2.vx = 5;
        p2.facing = 1;
      } else {
        p2.vx = 0;
      }
      if (keys["ArrowUp"] && p2.isGrounded) {
        p2.vy = -12;
        p2.isGrounded = false;
      }
      if (keys["Enter"]) shoot(p2);
    }

    function shoot(player) {
      if (!player.canShoot) return;
      player.canShoot = false;
      setTimeout(() => player.canShoot = true, 300); // cooldown

      const bullet = document.createElement("div");
      bullet.className = "bullet";
      bullet.style.left = player.x + 25 + "px";
      bullet.style.top = player.y + 20 + "px";
      game.appendChild(bullet);

      bullets.push({
        el: bullet,
        x: player.x + 25,
        y: player.y + 20,
        vx: 8 * player.facing,
        owner: player
      });
    }

    function updateBullets() {
      bullets.forEach((b, i) => {
        b.x += b.vx;
        b.el.style.left = b.x + "px";

        const target = b.owner === fighters.player1 ? fighters.player2 : fighters.player1;
        const tx = target.x + 25;
        const ty = target.y + 25;
        const dist = Math.hypot(b.x - tx, b.y - ty);

        if (dist < 30) {
          const damage = Math.random() < 0.2 ? 30 : 15; // 20% crit chance
          target.health -= damage;
          updateHealthBars();
          checkWin();
          b.el.remove();
          bullets.splice(i, 1);
        } else if (b.x < 0 || b.x > 1000) {
          b.el.remove();
          bullets.splice(i, 1);
        }
      });
    }

    function updateHealthBars() {
      health1.style.width = fighters.player1.health + "%";
      health2.style.width = fighters.player2.health + "%";
      health1.style.background = fighters.player1.health < 30 ? "red" : "limegreen";
      health2.style.background = fighters.player2.health < 30 ? "red" : "limegreen";
    }

    function checkWin() {
      if (fighters.player1.health <= 0) {
        winnerText.textContent = "Player 2 Wins!";
        winnerText.style.display = "block";
        cancelAnimationFrame(loopId);
      } else if (fighters.player2.health <= 0) {
        winnerText.textContent = "Player 1 Wins!";
        winnerText.style.display = "block";
        cancelAnimationFrame(loopId);
      }
    }

    function gameLoop() {
      handleControls();
      updatePosition(fighters.player1, p1);
      updatePosition(fighters.player2, p2);
      updateBullets();
      loopId = requestAnimationFrame(gameLoop);
    }

    let loopId = requestAnimationFrame(gameLoop);
  </script>
</body>
</html>
